
version: '3.3'

services:
  db:
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
  backend:
#    build: .
    image: alexabramov1985/infra_backend_1
    restart: always
    command: gunicorn foodgram_api.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000" 
    volumes:
      - static_value:/backend/static
      - media_value:/backend/media
    depends_on:
      - db
    env_file:
      - ./.env

  nginx:
    # образ, из которого должен быть запущен контейнер
    image: nginx:1.19.3

    # запросы с внешнего порта 80 перенаправляем на внутренний порт 80
    ports:
      - "80:80"

    volumes:
      # При сборке скопировать созданный нами конфиг nginx из исходной директории 
      # в контейнер и сохранить его в директорию /etc/nginx/conf.d/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

      # Контейнер nginx будет работать с данными, хранящиеся в томе static_value, 
      # через свою директорию /var/html/static/
#      - static_value:/var/html/static/
      - static_value:/var/html/static

      # Данные, хранящиеся в томе media_value, будут доступны в контейнере nginx
      # через директорию /var/html/media/
#      - media_value:/var/html/media/
      - media_value:/var/html/media

    depends_on:
      # Контейнер nginx должен быть запущен после контейнера backend
      - backend

volumes:
  postgres_data:
  # Добавляем новые тома 
  static_value:
  media_value:
